{"version":3,"sources":["auto-reload.js","app.js"],"names":["WebSocket","window","MozWebSocket","br","brunch","ar","disabled","cacheBuster","url","date","Math","round","Date","now","toString","replace","indexOf","browser","navigator","userAgent","toLowerCase","forceRepaint","reloaders","page","location","reload","stylesheet","slice","call","document","querySelectorAll","filter","link","val","getAttribute","href","forEach","setTimeout","body","offsetHeight","port","host","server","hostname","connect","connection","onmessage","event","message","data","reloader","onerror","readyState","close","onclose","CSSFlags","init","$searchInput","$","client","algoliasearch","helper","algoliasearchHelper","on","updateQuery","updateResults","query","setQuery","search","results","flags","_","map","hits","hit","name","_highlightResult","value","code","hide","each","flag","flagNode","parent","closest","hasClass","find","html","show"],"mappings":"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","file":"public/main.js","sourcesContent":["/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    }\n  };\n  var port = ar.port || 9486;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */","/* globals algoliasearch, algoliasearchHelper, $, _ */\nlet CSSFlags = {\n  init() {\n    this.$searchInput = $('#searchbar-input');\n    this.client = algoliasearch('O3F8QXYK6R', '3253f339ecaf4ff23f0afe8ad2ae655a');\n    this.helper = algoliasearchHelper(this.client, 'cssflags');\n\n    this.$searchInput.on('keyup', this.updateQuery);\n    this.helper.on('result', this.updateResults);\n  },\n  updateQuery() {\n    let query = $(CSSFlags.$searchInput).val();\n    CSSFlags.helper.setQuery(query).search();\n  },\n  updateResults(results) {\n    let flags = _.map(results.hits, (hit) => {\n      let name = hit.name;\n      if (hit._highlightResult.name) {\n        name = hit._highlightResult.name.value;\n      }\n\n      return {\n        code: hit.code,\n        name\n      };\n    });\n\n    // Hide them all\n    $('.c-flaglist--item').hide();\n\n    _.each(flags, (flag) => {\n      let flagNode = $(`.c-flag__${flag.code}`);\n      let parent = flagNode.closest('.c-flaglist--item');\n      if (parent.hasClass('c-flaglist--name__hard') || parent.hasClass('c-flaglist--item__unknown')) {\n        return;\n      }\n      parent.find('.c-flaglist--name').html(flag.name);\n      parent.show();\n    });\n  }\n\n\n};\n\nexport default CSSFlags;\n"]}